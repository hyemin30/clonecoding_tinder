# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "CI/CD" ]
  pull_request:
    branches: [ "CI/CD" ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: clonecode-tinder
  CODE_DEPLOY_APPLICATION_NAME: cloneCode-tinder
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: cloneCode-tinder-group

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      #    - name: Build with Gradle
      #      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      #      with:
      #        arguments: build

      # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir -p deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/
#
        # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r -qq -j ./clonecode-tinder.zip ./deploy

        # s3로 전달
      - name: Deploy
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIA6ESTHZIMNRAAX7L2
          aws-secret-access-key: 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
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 --acl private ./clonecode-tinder.zip s3://clonecode-tinder/
          
      # S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip